{"version":3,"sources":["components/PhoneBook/PhoneBook.module.css","components/Form/Form.module.css","components/Form/Form.js","components/PhoneBook/PhoneBook.js","components/Filter/Filter.js","components/App.js","index.js","components/box.module.css"],"names":["module","exports","INITIAL__STATE","name","number","Form","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","shortid","generate","resetForm","onCheckUnique","alert","this","className","s","form","onSubmit","input","type","onChange","st","myButton","Component","PhoneBookItem","onRemove","onClick","PhoneBook","contacts","length","phoneList","map","contact","Filter","filter","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","prevState","setItem","stringify","visibleContacts","box","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35ffc201.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneList\":\"PhoneBook_phoneList__2y9PH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2E0GX\",\"input\":\"Form_input__3rbL1\"};","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport s from './Form.module.css';\nimport st from '../box.module.css';\n\nconst INITIAL__STATE = {\n  name: '',\n  number: '',\n};\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n\n    if (!isValidatedForm) return;\n\n    onAdd({ id: shortid.generate(), name, number });\n\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { onCheckUnique } = this.props;\n\n    if (!name || !number) {\n      alert('Одно или больше полей осталось не заполненым');\n      return false;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => {\n    this.setState(INITIAL__STATE);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const handleChangeForm = this.handleChangeForm;\n    const handleFormSubmit = this.handleFormSubmit;\n\n    return (\n      <form className={s.form} onSubmit={handleFormSubmit}>\n        <label className={s.input}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeForm}\n          />\n        </label>\n        <label className={s.input}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChangeForm}\n          />\n        </label>\n        <button className={st.myButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import s from './PhoneBook.module.css';\nimport propTypes from 'prop-types';\n\nconst PhoneBookItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li>\n      {name}:{number} <button onClick={() => onRemove(id)}>delete</button>\n    </li>\n  );\n};\n\nconst PhoneBook = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.phoneList}>\n      {contacts.map(contact => (\n        <PhoneBookItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nPhoneBookItem.propTypes = {\n  id: propTypes.string,\n  name: propTypes.string,\n  number: propTypes.string,\n  onRemove: propTypes.func,\n};\n\nPhoneBook.propTypes = {\n  contacts: propTypes.arrayOf(propTypes.object),\n  onRemove: propTypes.func,\n};\n\nexport default PhoneBook;\n","import s from '../Form/Form.module.css';\nimport propTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={s.input}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: propTypes.string,\n  onChange: propTypes.func,\n};\nexport default Filter;\n","import { Component } from 'react';\n\nimport Form from './Form/Form';\nimport PhoneBook from './PhoneBook/PhoneBook';\nimport Filter from './Filter/Filter';\n\nimport s from './box.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert('Такой контакт существует');\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    const handleCheckUniqueContact = this.handleCheckUniqueContact;\n    const handleAddContact = this.handleAddContact;\n    const handleFilterChange = this.handleFilterChange;\n    const handleRemoveContact = this.handleRemoveContact;\n\n    return (\n      <div className={s.box}>\n        <h2>Form</h2>\n        <Form\n          onAdd={handleAddContact}\n          onCheckUnique={handleCheckUniqueContact}\n        />\n        <h2>Book</h2>\n        <Filter filter={filter} onChange={handleFilterChange} />\n        <PhoneBook contacts={visibleContacts} onRemove={handleRemoveContact} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__38ydc\",\"myButton\":\"box_myButton__1NmeR\"};"],"sourceRoot":""}